name: PainLang
scopeName: source.pl
fileTypes: [pl]
patterns:
  - include: '#comments'
  - include: '#control-keywords'
  - include: '#function-declaration'
  - include: '#function-call'
  - include: '#function-keyword'
  - include: '#types'
  - include: '#booleans'
  - include: '#strings'
  - include: '#numbers'
  - include: '#operators'
  - include: '#identifiers'
repository:
  comments:
    patterns:
      - name: comment.line.double-slash.pl
        match: '//.*$'

  function-keyword:
    patterns:
      - name: storage.type.function.keyword.pl
        match: '\b(function)\b'

  control-keywords:
    patterns:
      - name: keyword.control.pl
        match: '\b(if|else|for|while|return|let|include)\b'

  function-declaration:
    patterns:
      - name: meta.function.pl
        begin: '\b(function)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\()'
        beginCaptures:
          1: 
            name: storage.type.function.keyword.pl
          2: 
            name: entity.name.function.pl
          3: 
            name: punctuation.definition.parameters.begin.pl
        end: '(\))(?:\s*(?:(->)\s*([a-zA-Z_][a-zA-Z0-9_]*)))?'
        endCaptures:
          1: 
            name: punctuation.definition.parameters.end.pl
          2:
            name: keyword.operator.arrow.pl
          3:
            name: support.type.return.pl
        patterns:
          - include: '#function-parameters'

  function-parameters:
    patterns:
      - name: meta.parameter.typed.pl
        match: '\b([a-zA-Z_][a-zA-Z0-9_]*)\s*(:)\s*([a-zA-Z_][a-zA-Z0-9_]*)\b'
        captures:
          1:
            name: variable.parameter.pl
          2:
            name: keyword.operator.type.annotation.pl
          3:
            name: support.type.pl
      - name: variable.parameter.pl
        match: '\b[a-zA-Z_][a-zA-Z0-9_]*\b'
      - name: punctuation.separator.parameter.pl
        match: ','

  function-call:
    patterns:
      - name: meta.function-call.pl
        match: '\b([a-zA-Z_][a-zA-Z0-9_]*)\s*(\()'
        captures:
          1: 
            name: entity.name.function.pl
          2: 
            name: punctuation.definition.parameters.begin.pl

  types:
    patterns:
      - name: support.type.primitive.pl
        match: '\b(number|string|bool)\b'

  booleans:
    patterns:
      - name: constant.language.boolean.pl
        match: '\b(true|false)\b'

  strings:
    patterns:
      - name: string.quoted.double.pl
        begin: '"'
        end: '"'
        patterns:
          - name: constant.character.escape.pl
            match: '\\.'

  numbers:
    patterns:
      - name: constant.numeric.pl
        match: '\b\d+(\.\d+)?\b'

  operators:
    patterns:
      - name: keyword.operator.assignment.pl
        match: '\+=|-=|\*=|/=|='
      - name: keyword.operator.arithmetic.pl
        match: '\+|-|\*|/'
      - name: keyword.operator.logical.pl
        match: '\b(&|!)\b'
      - name: keyword.operator.comparison.pl
        match: '\<=|>=|<|>'

  identifiers:
    patterns:
      - name: variable.other.pl
        match: '\b[a-zA-Z_][a-zA-Z0-9_]*\b'